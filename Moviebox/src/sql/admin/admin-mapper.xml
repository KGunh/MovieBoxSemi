<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<comment>
		Admin Mapper
	</comment>


	<!-- 영화 -->
	<entry key="adminSelectMovieList">
		SELECT *
		FROM (SELECT A.*, ROWNUM RNUM
		      FROM (SELECT
				    MOVIE_NO,
				    TO_CHAR(MOVIE_RELEASE, 'YY/MM/DD') MOVIE_RELEASE,
				    MOVIE_TITLE,
				    MOVIE_RATED,
				    GENRE_NAME,
				    TO_CHAR(MOVIE_UPDATE, 'YY/MM/DD') MOVIE_UPDATE
				FROM
				    TB_MOVIE
				LEFT
				JOIN
				    TB_GENRE ON(GENRE_NO = GENRE_CODE)
			   WHERE STATUS = 'Y'
				ORDER
				   BY
				     MOVIE_NO DESC) A)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	

		<entry key="selectListCount">
		SELECT
		    COUNT(*)
		  FROM
		    TB_MOVIE
		 WHERE
		    STATUS = 'Y'
	</entry>
	
	
	
<!--장르카테고리-->
	<entry key="SelectGenreList">
		SELECT
		    GENRE_CODE,
		    GENRE_NAME
		FROM
		    TB_GENRE
	</entry>


	<!-- 감독이름으로 감독NO조회 -->
	<entry key="SelectDirectorName">
		SELECT 
			DIRECTOR_NO 
		FROM
			TB_DIRECTOR 
		WHERE 
			DIRECTOR_NAME LIKE ?
	</entry>
	
	<!-- 감독 등록전 시퀀스 조회 -->
	<entry key="SelectDirectorNo">
		SELECT 
			SEQ_DIRECNO.NEXTVAL AS DIRECTOR_NO
		FROM
			  DUAL
	</entry>
	
	
	<!-- 감독 등록 -->
	<entry key="InsertDirector">
		INSERT
		  INTO
		  	TB_DIRECTOR
		  	(
		  	DIRECTOR_NO,
		  	DIRECTOR_NAME
		  	)
		  VALUES
			  (
			  ?,
			  ?
			  )
	</entry>
	
	
	<!-- 출연진 이름으로 출연진NO조회 -->
	<entry key="SelectActorName">
		SELECT 
			ACTOR_NO 
		FROM
			TB_ACTOR 
		WHERE 
			ACTOR_NAME LIKE ?
	</entry>
	
	<!-- 출연진 등록전 시퀀스 조회 -->
	<entry key="SelectActorNo">
		SELECT 
			SEQ_ACTNO.NEXTVAL AS ACTOR_NO
		FROM
		  DUAL
	</entry>
	
	<!-- 출연진 등록 -->
	<entry key="InsertActor">
		INSERT
		  INTO
		  	TB_ACTOR
		  	(
		  	ACTOR_NO,
		  	ACTOR_NAME
		  	)
		  VALUES
			  (
			  ?,
			  ?
			  )
	</entry>


	<!-- 영화 등록전 시퀀스 조회 -->
	<entry key="SelectMovieNo">
		SELECT
			 SEQ_MVNO.NEXTVAL AS MOVIE_NO
		FROM
			 DUAL
	</entry>

	<!-- 영화 등록 -->
	<entry key="InsertMovie">
		INSERT
		  INTO
		  	TB_MOVIE
		  	(
		  	MOVIE_NO,
		  	MOVIE_TITLE,
		  	MOVIE_RT,
		  	MOVIE_RATED,
		  	MOVIE_RELEASE,
		  	MOVIE_STORY,
		  	STATUS,
		  	GENRE_NO,
		  	DIRECTOR_NO,
		  	MOVIE_UPDATE,
		  	TRAILER_VIDEO
		  	)
		  VALUES
			  (
			  ?,
			  ?,
			  ?, 
			  ?, 
			  ?,
			  ?, 
			  'Y', 
			  ?, 
			  ?, 
			  SYSDATE,
			  ?
			  )
	</entry>
	
	<!-- 영화 수정 -->
	<entry key="updateMovie">
	UPDATE TB_MOVIE
	   SET MOVIE_TITLE = ?,
	       MOVIE_RT = ?,
	       MOVIE_RATED = ?,
	       MOVIE_RELEASE = ?,
	       MOVIE_STORY = ?,
	       STATUS = 'Y',
	       GENRE_NO = ?,
	       DIRECTOR_NO = ?,
	       MOVIE_UPDATE = SYSDATE,
	       TRAILER_VIDEO = ?
	 WHERE MOVIE_NO = ?
	</entry>

	<!-- Cast 등록 -->
	<entry key="selectDuplicateCast">
	SELECT COUNT(*)
	  FROM 
	  	TB_CAST
	 WHERE
	 	MOVIE_NO = ?
	   AND
	    ACTOR_NO = ?
		  	
	</entry>

	<!-- Cast 등록 -->
	<entry key="InsertCast">
		INSERT
		  INTO
		  	TB_CAST
		  	(
		  	MOVIE_NO,
		  	ACTOR_NO
		  	)
		  VALUES
			  (
			  ?,
			  ?
			  )
	</entry>
	
	
	
	
	<!-- 공지전체보기 -->
	<entry key="adminSelectNoticeList">
		SELECT *
		FROM (SELECT A.*, ROWNUM RNUM
		      FROM (SELECT
				    NOTICE_NO,
				    CATEGORY_NAME,
				    NOTICE_TITLE,                  
				    TO_CHAR(CREATE_DATE, 'YY/MM/DD') CREATE_DATE,                   
				    COUNT      
				FROM
				    TB_NOTICE    
				JOIN
				    TB_CATEGORY ON (NOTICE_CATEGORY = CATEGORY_NO)
				WHERE STATUS = 'Y'
				ORDER
				   BY
				    NOTICE_NO DESC) A)
		WHERE RNUM BETWEEN ? AND ?
	</entry>


	<entry key="selectListCountNotice">
		SELECT
		    COUNT(*)
		  FROM
		    TB_NOTICE
		 WHERE
		    STATUS = 'Y'
	</entry>


	<!-- 문의전체보기 -->
	<entry key="adminSelectQnAList">
		SELECT *
		FROM (SELECT A.*, ROWNUM RNUM
		      FROM (SELECT
		    BOARD_NO,
		    TB_CATEGORY.CATEGORY_NAME,
		    BOARD_TITLE,
		    MEMBER_ID,
		    TO_CHAR(CREATE_DATE, 'YY/MM/DD') CREATE_DATE,
		    COUNT
		FROM
		   TB_BOARD
		JOIN 
		    TB_MEMBER USING (MEMBER_NO)
        JOIN 
            TB_CATEGORY USING (CATEGORY_NO)
		WHERE 
            TB_BOARD.STATUS = 'Y'
		ORDER
		   BY
		    BOARD_NO DESC) A)
		WHERE RNUM BETWEEN ? AND ?
	</entry>


	<entry key="selectListCountQnA">
		SELECT
		    COUNT(*)
		  FROM
		    TB_BOARD
		 WHERE
		    STATUS = 'Y'
	</entry>




	<!-- 영화상세 -->
	<entry key="adminMovieDetail">
		SELECT
	       A.MOVIE_NO AS MOVIE_NO,
	       A.MOVIE_TITLE AS MOVIE_TITLE,
	       A.MOVIE_RT AS MOVIE_RT,
	       A.MOVIE_RATED AS MOVIE_RATED,
	       A.MOVIE_RELEASE AS MOVIE_RELEASE,
	       A.MOVIE_STORY AS MOVIE_STORY,
	       A.STATUS AS STATUS,
	       A.GENRE_NO AS GENRE_NO,
	       B.GENRE_NAME AS GENRE_NAME,
	       A.DIRECTOR_NO AS DIRECTOR_NO,
	       C.DIRECTOR_NAME AS DIRECTOR_NAME,
	       A.MOVIE_UPDATE AS MOVIE_UPDATE,
	       A.TRAILER_VIDEO AS TRAILER_VIDEO
		FROM
		   TB_MOVIE A
		LEFT
		OUTER
		JOIN
			TB_GENRE B ON A.GENRE_NO = B.GENRE_CODE
		LEFT
		OUTER
		JOIN
			TB_DIRECTOR C ON A.DIRECTOR_NO = C.DIRECTOR_NO
		WHERE
		   A.MOVIE_NO = ?
	</entry>
	
	<entry key="SelectCastInfo">
		SELECT 
		    LISTAGG(A.ACTOR_NAME, ', ') 
		    WITHIN GROUP 
		           (ORDER BY A.ACTOR_NO) AS ACTOR_NAMES
		FROM 
		    TB_ACTOR A
		JOIN 
		    TB_CAST C ON A.ACTOR_NO = C.ACTOR_NO
		WHERE
		    C.MOVIE_NO = ?
	</entry>
	<!-- -->





	<entry key="selectTheaterList">
		SELECT
		       THEATER_NO,
		       THEATER_NAME
		  FROM
		       TB_THEATER
         WHERE
         	   LOCATION_CODE = ?
		 ORDER
		    BY
		       THEATER_NO ASC
	
	
	</entry>
	<entry key="adminDetailScreenName">
		SELECT
       		   SCREEN_NAME
          FROM
               TB_SCREEN
         WHERE
               THEATER_NO = ?
         GROUP
            BY  
               SCREEN_NAME
         ORDER
   			BY
       		   SCREEN_NAME
	
	</entry>
	
	<entry key="adminMovieList">
	SELECT
		   SCREEN_NO,
       	   MOVIE_NO,
           MOVIE_TITLE,
           TO_CHAR(WATCH_DATE,'HH24:MI:SS') AS WATCH_DATE
      FROM
           TB_SCREEN
      JOIN
           TB_MOVIE USING(MOVIE_NO)
     WHERE
           THEATER_NO = ? AND SCREEN_NAME = ? AND TO_CHAR(WATCH_DATE,'YYYY-MM-DD') = TO_CHAR(TO_DATE(?,'YYYY-MM-DD'),'YYYY-MM-DD')
       AND STATUS = 'Y'    
	 ORDER
   	    BY WATCH_DATE
	
	</entry>
	
	
	
	<entry key="adminDetailTheater">
		SELECT
       			   SCREEN_NAME,
       			   WATCH_DATE,
       			   THEATER_NAME,
       			   MOVIE_TITLE
  		   FROM
       			   TB_SCREEN
  			JOIN
       			   TB_MOVIE USING(MOVIE_NO)
  			JOIN
       			   TB_THEATER USING(THEATER_NO)
 	     WHERE
       			   THEATER_NO = ?
   			 AND
       			   TRUNC(WATCH_DATE) = TO_DATE(?,'YYYYMMDD')
 		 ORDER
    		  BY 
       			    SCREEN_NAME, WATCH_DATE
			      
	
	</entry>
	
	
	
	<!--  -->
	<entry key="searchTitle">
		SELECT *
		FROM (SELECT A.*, ROWNUM RNUM
		      FROM (SELECT
				    MOVIE_NO,
				    TO_CHAR(MOVIE_RELEASE, 'YY/MM/DD') MOVIE_RELEASE,
				    MOVIE_TITLE,
				    MOVIE_RATED,
				    GENRE_NAME,
				    TO_CHAR(MOVIE_UPDATE, 'YY/MM/DD') MOVIE_UPDATE
				FROM
				    TB_MOVIE
				LEFT
				JOIN
				    TB_GENRE ON(GENRE_NO = GENRE_CODE)
               WHERE
                   MOVIE_TITLE LIKE '%'||?||'%'
                 AND STATUS = 'Y' 
               ORDER
			      BY
	  		       MOVIE_NO DESC) A)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	<entry key="selectScreen">
	SELECT
       	   COUNT(*)
  	  FROM
           TB_SCREEN
     WHERE
           TO_CHAR(WATCH_DATE,'YYYY-MM-DD/HH24:MI') = ?
       AND
           THEATER_NO = ? AND SCREEN_NAME = ?
	
	</entry>
	<entry key="insertScreen">
		INSERT
	      INTO
	      	   TB_SCREEN
	    VALUES(SEQ_SCRNO.NEXTVAL,?,?,TO_DATE(?,'YYYY-MM-DD/HH24:MI'),?)
	</entry>
	
	<entry key="adminMovieDelete">
		UPDATE
			  TB_MOVIE
		   SET
		   	  STATUS = 'N'
		 WHERE
		 	  MOVIE_NO = ?
	</entry>
	
	
	
	<entry key="SelectPoster"> 
		SELECT
			 FILE_PATH AS FILE_PATH,
			 CHANGE_NAME AS CHANGE_NAME
		 FROM
		 	TB_ATTACHMENT 
		 WHERE 
		 	MOVIE_NO = ? 
		 AND 
		 	FILE_LEVEL = 1
		 ORDER BY FILE_NO DESC
	</entry>
	
	
	<!-- 공지상세보기 -->
	<entry key="adminBoardDetail"> 
		SELECT A.NOTICE_NO,
		       A.NOTICE_TITLE,
		       A.NOTICE_WRITER,
		       A.NOTICE_CONTENT,
		       A.CREATE_DATE,
		       A.COUNT,
		       A.STATUS,
		       A.NOTICE_CATEGORY,
		       B.CATEGORY_NO,
		       B.CATEGORY_NAME
		  FROM TB_NOTICE A
		       LEFT OUTER JOIN TB_CATEGORY B
		            ON A.NOTICE_CATEGORY = B.CATEGORY_NO
		 WHERE A.NOTICE_NO = ?
 	</entry>
	
	
	<!-- 문의상세보기 -->
	<entry key="adminQnADetail">
	    SELECT 
	           A.BOARD_NO,
	           A.BOARD_TITLE,
	           A.BOARD_CONTENT,
	           A.CREATE_DATE,
	           A.COUNT,
	           A.STATUS,
	           B.CATEGORY_NAME
	      FROM TB_BOARD A
	           LEFT OUTER JOIN TB_CATEGORY B
	                ON A.CATEGORY_NO = B.CATEGORY_NO
	     WHERE A.BOARD_NO = ?
	</entry>
	
	<!-- 공지삭제 -->
	<entry key="adminBoardDelete">
		UPDATE TB_NOTICE
		   SET STATUS = 'N'
		 WHERE NOTICE_NO = ?
	</entry>
	
	
		<!-- 문의삭제 -->
	<entry key="adminQnADelete">
		UPDATE TB_BOARD
		   SET STATUS = 'N'
		 WHERE BOARD_NO = ?
	</entry>
	
	<!-- 공지등록 -->
	<entry key="adminBoardInsert">
		INSERT 
		INTO 
			TB_NOTICE
				( 
				  NOTICE_NO,
				  NOTICE_TITLE,
				  NOTICE_WRITER,
				  NOTICE_CONTENT,
				  CREATE_DATE,
				  COUNT,
				  STATUS,
				  NOTICE_CATEGORY
				)
		VALUES
				( 
				  SEQ_NOTICENO.NEXTVAL,
				  ?,
				  ?,
				  ?,
				  SYSDATE,
				  0,
				  'Y',
				  ?
				)
	</entry>
	
	<!-- Attachment에 포스터 저장 -->
	<entry key="InsertAttach">
		INSERT
		  INTO
			    TB_ATTACHMENT
			    (
			    FILE_NO,
			    MOVIE_NO,
			    ORIGIN_NAME,
			    CHANGE_NAME,
			    FILE_PATH,
			    FILE_LEVEL
			    )
		  VALUES
			   (
			   SEQ_FNO.NEXTVAL,
			   ?,
			   ?,
			   ?,
			   ?,
			   ?
			   )
	</entry>
	
	<!-- 공지수정 -->
	<entry key="adminBoardUpdate">
		UPDATE
	      	  TB_NOTICE
	       SET
		      NOTICE_CATEGORY = ?,
		      NOTICE_TITLE = ?,
		      NOTICE_CONTENT = ?
	 	 WHERE
	      	  NOTICE_NO = ?
	</entry>
	
	
	

</properties>